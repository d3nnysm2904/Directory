{"ast":null,"code":"var _jsxFileName = \"/home/d3nnysm2904/directory/escuela/back End/REACT/router_history/context/react-context-demo/deadly-doubles/demo-casino/src/DeadlyDoubles.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DiceSet from \"./DiceSet\";\nimport { hasDoubles, rollDice, sum } from \"./utils\";\n\n/** DeadlyDoubles: a simple dice-rolling game.\n *\n * Keep rolling until sum of dice >= goal (win) or until you get doubles (lose)\n *\n * Props:\n * - numDice: number of dice to roll\n * - numSides: number of sides on dice\n * - gameState: \"won\", \"lost\", or undefined (still being played)\n *\n * State:\n * - vals: values of dice\n *\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DeadlyDoubles(_ref) {\n  _s();\n  let {\n    numDice = 3,\n    numSides = 6,\n    addWin,\n    addLoss,\n    gameState\n  } = _ref;\n  const [vals, setVals] = useState(Array(numDice).fill(null));\n  const goal = Math.floor(numDice * (numSides / 2));\n\n  /** roll dice: if won/lost, tell Table (parent) that. Update state. */\n\n  function roll(evt) {\n    let vals = rollDice(numDice, numSides);\n    if (sum(vals) >= goal) {\n      addWin();\n    } else if (hasDoubles(vals)) {\n      addLoss();\n    }\n    setVals(vals);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DeadlyDoubles\",\n    children: [/*#__PURE__*/_jsxDEV(DiceSet, {\n      vals: vals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        children: [\"Need: \", goal, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        children: [\"Sum: \", sum(vals), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), gameState ? /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"You \", gameState, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: roll,\n        children: \"Roll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(DeadlyDoubles, \"+1VgRYnZR3X6QVUlT7ZsTXfbkmQ=\");\n_c = DeadlyDoubles;\nexport default DeadlyDoubles;\nvar _c;\n$RefreshReg$(_c, \"DeadlyDoubles\");","map":{"version":3,"names":["React","useState","DiceSet","hasDoubles","rollDice","sum","DeadlyDoubles","numDice","numSides","addWin","addLoss","gameState","vals","setVals","Array","fill","goal","Math","floor","roll","evt"],"sources":["/home/d3nnysm2904/directory/escuela/back End/REACT/router_history/context/react-context-demo/deadly-doubles/demo-casino/src/DeadlyDoubles.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport DiceSet from \"./DiceSet\";\nimport { hasDoubles, rollDice, sum } from \"./utils\";\n\n/** DeadlyDoubles: a simple dice-rolling game.\n *\n * Keep rolling until sum of dice >= goal (win) or until you get doubles (lose)\n *\n * Props:\n * - numDice: number of dice to roll\n * - numSides: number of sides on dice\n * - gameState: \"won\", \"lost\", or undefined (still being played)\n *\n * State:\n * - vals: values of dice\n *\n */\n\nfunction DeadlyDoubles({\n  numDice = 3,\n  numSides = 6,\n  addWin,\n  addLoss,\n  gameState\n}) {\n  const [vals, setVals] = useState(Array(numDice).fill(null));\n  const goal = Math.floor(numDice * (numSides / 2));\n\n  /** roll dice: if won/lost, tell Table (parent) that. Update state. */\n\n  function roll(evt) {\n    let vals = rollDice(numDice, numSides);\n\n    if (sum(vals) >= goal) {\n      addWin();\n    } else if (hasDoubles(vals)) {\n      addLoss();\n    }\n\n    setVals(vals);\n  }\n\n  return (\n    <div className=\"DeadlyDoubles\">\n      <DiceSet vals={vals} />\n      <div>\n        <i>Need: {goal} </i>\n        <i>Sum: {sum(vals)} </i>\n        {gameState ? (\n          <b>You {gameState}!</b>\n        ) : (\n          <button onClick={roll}>Roll</button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default DeadlyDoubles;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,UAAU,EAAEC,QAAQ,EAAEC,GAAG,QAAQ,SAAS;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA,SAASC,aAAa,OAMnB;EAAA;EAAA,IANoB;IACrBC,OAAO,GAAG,CAAC;IACXC,QAAQ,GAAG,CAAC;IACZC,MAAM;IACNC,OAAO;IACPC;EACF,CAAC;EACC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAACa,KAAK,CAACP,OAAO,CAAC,CAACQ,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3D,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACX,OAAO,IAAIC,QAAQ,GAAG,CAAC,CAAC,CAAC;;EAEjD;;EAEA,SAASW,IAAI,CAACC,GAAG,EAAE;IACjB,IAAIR,IAAI,GAAGR,QAAQ,CAACG,OAAO,EAAEC,QAAQ,CAAC;IAEtC,IAAIH,GAAG,CAACO,IAAI,CAAC,IAAII,IAAI,EAAE;MACrBP,MAAM,EAAE;IACV,CAAC,MAAM,IAAIN,UAAU,CAACS,IAAI,CAAC,EAAE;MAC3BF,OAAO,EAAE;IACX;IAEAG,OAAO,CAACD,IAAI,CAAC;EACf;EAEA,oBACE;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC5B,QAAC,OAAO;MAAC,IAAI,EAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eACvB;MAAA,wBACE;QAAA,WAAG,QAAM,EAACI,IAAI,EAAC,GAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI,eACpB;QAAA,WAAG,OAAK,EAACX,GAAG,CAACO,IAAI,CAAC,EAAC,GAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI,EACvBD,SAAS,gBACR;QAAA,WAAG,MAAI,EAACA,SAAS,EAAC,GAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI,gBAEvB;QAAQ,OAAO,EAAEQ,IAAK;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAC5B;IAAA;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAtCQb,aAAa;AAAA,KAAbA,aAAa;AAwCtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}