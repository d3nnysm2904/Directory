{"ast":null,"code":"var _jsxFileName = \"/home/d3nnysm2904/directory/escuela/back End/REACT/router_history/context/react-context-demo/deadly-doubles/demo-casino/src/RollEm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DiceSet from \"./DiceSet\";\nimport { rollDice } from \"./utils\";\n\n/** Roll: a simple dice-rolling game.\n *\n * Keep rolling dice -- there's no real win/loss.\n *\n * Props:\n * - numDice: number of dice to roll\n * - numSides: number of sides on dice\n * - gameState: \"won\", \"lost\", or undefined [if still playing]\n *              in this game, every roll \"wins\"\n *\n * State:\n * - vals: values of dice\n *\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RollEm(_ref) {\n  _s();\n  let {\n    numDice = 3,\n    numSides = 6,\n    gameState,\n    addWin\n  } = _ref;\n  const [vals, setVals] = useState(Array(numDice).fill());\n  function roll(evt) {\n    setVals(rollDice(numDice, numSides));\n    // \"hey, kids --- every game's a winner! isn't gambling *fun*?\"\n    addWin();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RollEm\",\n    children: [/*#__PURE__*/_jsxDEV(DiceSet, {\n      vals: vals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), gameState ? /*#__PURE__*/_jsxDEV(\"b\", {\n      children: [\"You \", gameState, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: roll,\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(RollEm, \"7uDzs6/OlCSDfp6dgddSSyXdZwY=\");\n_c = RollEm;\nexport default RollEm;\nvar _c;\n$RefreshReg$(_c, \"RollEm\");","map":{"version":3,"names":["React","useState","DiceSet","rollDice","RollEm","numDice","numSides","gameState","addWin","vals","setVals","Array","fill","roll","evt"],"sources":["/home/d3nnysm2904/directory/escuela/back End/REACT/router_history/context/react-context-demo/deadly-doubles/demo-casino/src/RollEm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport DiceSet from \"./DiceSet\";\nimport { rollDice } from \"./utils\";\n\n/** Roll: a simple dice-rolling game.\n *\n * Keep rolling dice -- there's no real win/loss.\n *\n * Props:\n * - numDice: number of dice to roll\n * - numSides: number of sides on dice\n * - gameState: \"won\", \"lost\", or undefined [if still playing]\n *              in this game, every roll \"wins\"\n *\n * State:\n * - vals: values of dice\n *\n */\n\nfunction RollEm({ numDice = 3, numSides = 6, gameState, addWin }) {\n  const [vals, setVals] = useState(Array(numDice).fill());\n  function roll(evt) {\n    setVals(rollDice(numDice, numSides));\n    // \"hey, kids --- every game's a winner! isn't gambling *fun*?\"\n    addWin();\n  }\n\n  return (\n    <div className=\"RollEm\">\n      <DiceSet vals={vals} />\n      {gameState ? (\n        <b>You {gameState}!</b>\n      ) : (\n        <button onClick={roll}>Roll</button>\n      )}\n    </div>\n  );\n}\n\nexport default RollEm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,QAAQ,QAAQ,SAAS;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA,SAASC,MAAM,OAAmD;EAAA;EAAA,IAAlD;IAAEC,OAAO,GAAG,CAAC;IAAEC,QAAQ,GAAG,CAAC;IAAEC,SAAS;IAAEC;EAAO,CAAC;EAC9D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACU,KAAK,CAACN,OAAO,CAAC,CAACO,IAAI,EAAE,CAAC;EACvD,SAASC,IAAI,CAACC,GAAG,EAAE;IACjBJ,OAAO,CAACP,QAAQ,CAACE,OAAO,EAAEC,QAAQ,CAAC,CAAC;IACpC;IACAE,MAAM,EAAE;EACV;EAEA,oBACE;IAAK,SAAS,EAAC,QAAQ;IAAA,wBACrB,QAAC,OAAO;MAAC,IAAI,EAAEC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,EACtBF,SAAS,gBACR;MAAA,WAAG,MAAI,EAACA,SAAS,EAAC,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI,gBAEvB;MAAQ,OAAO,EAAEM,IAAK;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAC5B;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GAlBQT,MAAM;AAAA,KAANA,MAAM;AAoBf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}