{"ast":null,"code":"var _jsxFileName = \"/home/d3nnysm2904/directory/escuela/back End/REACT/router_history/context/my-app/src/themeProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ThemeContext from './family/themeContext';\n\n// Children is a special prop made by react, whatever we nest inside a component will be avalable with the children prop \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [themeColor, setThemeColor] = useState('purple');\n  const changeColor = () => {\n    setThemeColor(color => color === 'purple' ? 'teal' : 'purple');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: themeColor,\n    children: [children, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeColor,\n      children: \"Toggle Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(ThemeProvider, \"7ZxrjQrD0Tn6h/MFSq5LHrRRTGw=\");\n_c = ThemeProvider;\nexport default ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","useState","ThemeContext","ThemeProvider","children","themeColor","setThemeColor","changeColor","color"],"sources":["/home/d3nnysm2904/directory/escuela/back End/REACT/router_history/context/my-app/src/themeProvider.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ThemeContext from './family/themeContext';\n\n\n// Children is a special prop made by react, whatever we nest inside a component will be avalable with the children prop \n\n\nconst ThemeProvider = ( { children } ) =>\n{\n    const [ themeColor, setThemeColor ] = useState( 'purple' );\n\n    const changeColor = () =>\n    {\n        setThemeColor( color => color === 'purple' ? 'teal' : 'purple' );\n    };\n    return (\n        <ThemeContext.Provider value={ themeColor } >\n            { children }\n            <button onClick={ changeColor } >Toggle Color</button>\n\n        </ThemeContext.Provider>\n    );\n\n};\n\nexport default ThemeProvider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,uBAAuB;;AAGhD;AAAA;AAGA,MAAMC,aAAa,GAAG,QACtB;EAAA;EAAA,IADwB;IAAEC;EAAS,CAAC;EAEhC,MAAM,CAAEC,UAAU,EAAEC,aAAa,CAAE,GAAGL,QAAQ,CAAE,QAAQ,CAAE;EAE1D,MAAMM,WAAW,GAAG,MACpB;IACID,aAAa,CAAEE,KAAK,IAAIA,KAAK,KAAK,QAAQ,GAAG,MAAM,GAAG,QAAQ,CAAE;EACpE,CAAC;EACD,oBACI,QAAC,YAAY,CAAC,QAAQ;IAAC,KAAK,EAAGH,UAAY;IAAA,WACrCD,QAAQ,eACV;MAAQ,OAAO,EAAGG,WAAa;MAAA,UAAE;IAAY;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAElC;AAGhC,CAAC;AAAC,GAhBIJ,aAAa;AAAA,KAAbA,aAAa;AAkBnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}